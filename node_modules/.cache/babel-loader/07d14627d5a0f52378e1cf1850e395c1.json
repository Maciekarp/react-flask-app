{"ast":null,"code":"var _jsxFileName = \"E:\\\\UMBC Stuff\\\\CMSC 447\\\\homework\\\\react-flask-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { List, Header } from \"semantic-ui-react\";\n/*\nfunction App() {\n  const [currentTime, setCurrentTime] = useState(0);\n\n  useEffect(() => {\n    fetch('/time').then(res => res.json()).then(data => {\n      setCurrentTime(data.time);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          The current time is {currentTime}.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      id: '',\n      points: ''\n    }; // This binding is necessary to make `this` work in the callback\n\n    this.handleName = this.handleName.bind(this);\n    this.handleID = this.handleID.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handlePoints = this.handlePoints.bind(this);\n  }\n\n  handleName(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  handleID(event) {\n    this.setState({\n      id: event.target.value\n    });\n  }\n\n  handlePoints(event) {\n    this.setState({\n      points: event.target.value\n    });\n  }\n\n  async handleSubmit(event) {\n    if (this.state.name == '' || this.state.id == '' || this.state.points == '') {\n      alert('The query cannot be empty');\n    } else if (isNaN(this.state.id) || isNaN(this.state.points)) {\n      alert('ID and Points must be integers');\n    } else {\n      var newStudent = {\n        name: this.state.name,\n        id: Number(this.state.id),\n        points: Number(this.state.points)\n      };\n      const response = await fetch('/add', {\n        method: 'POST',\n        //headers: {\n        //  'Content-Type': 'application/json'\n        //},\n        body: JSON.stringify(newStudent)\n      });\n\n      if (response.ok) {\n        console.log('response work!!!!');\n      } else {\n        console.log(\"something didnt work\");\n      }\n\n      this.setState({\n        name: ''\n      });\n      this.setState({\n        id: ''\n      });\n      this.setState({\n        points: ''\n      });\n    }\n\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.name,\n          onChange: this.handleName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.id,\n          onChange: this.handleID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Points:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.points,\n          onChange: this.handlePoints\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport const Students = _ref => {\n  let {\n    students\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: [\"Name:\", students.map(student => {\n      return /*#__PURE__*/_jsxDEV(List.Item, {\n        children: /*#__PURE__*/_jsxDEV(Header, {\n          children: [student.name, student.id, student.points]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, student.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_c = Students;\n\nfunction GetLines() {\n  _s();\n\n  const [students, setStudents] = useState([]);\n  useEffect(() => {\n    fetch(\"/data\").then(response => response.json().then(data => {\n      setStudents(data.rows);\n    }));\n  }, []);\n  console.log(students);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"GetLines\",\n    children: /*#__PURE__*/_jsxDEV(Students, {\n      students: students\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GetLines, \"Xxsbsc/n21pueGlfwfykfeIEF1E=\");\n\n_c2 = GetLines;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table\",\n    children: [/*#__PURE__*/_jsxDEV(CreateData, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GetLines, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Students\");\n$RefreshReg$(_c2, \"GetLines\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["E:/UMBC Stuff/CMSC 447/homework/react-flask-app/src/App.js"],"names":["React","useState","useEffect","logo","List","Header","CreateData","Component","constructor","props","state","name","id","points","handleName","bind","handleID","handleSubmit","handlePoints","event","setState","target","value","alert","isNaN","newStudent","Number","response","fetch","method","body","JSON","stringify","ok","console","log","preventDefault","render","Students","students","map","student","GetLines","setStudents","then","json","data","rows","App"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { List, Header } from \"semantic-ui-react\";\n/*\nfunction App() {\n  const [currentTime, setCurrentTime] = useState(0);\n\n  useEffect(() => {\n    fetch('/time').then(res => res.json()).then(data => {\n      setCurrentTime(data.time);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          The current time is {currentTime}.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n*/\nclass CreateData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {name: '', id: '', points: ''};\n    // This binding is necessary to make `this` work in the callback\n    this.handleName = this.handleName.bind(this);\n    this.handleID = this.handleID.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handlePoints = this.handlePoints.bind(this);\n\n  }\n\n  handleName(event) {\n    this.setState({name: event.target.value});\n  }\n\n  handleID(event) {\n    this.setState({id: event.target.value});\n  }\n  \n  handlePoints(event) {\n    this.setState({points: event.target.value});\n  }\n\n\n  async handleSubmit(event) {\n    if (this.state.name == '' || this.state.id == '' || this.state.points == ''){\n      alert('The query cannot be empty')\n    } else if (isNaN(this.state.id) || isNaN(this.state.points)) {\n      alert('ID and Points must be integers')\n    } else {\n      var newStudent = {\n        name: this.state.name,\n        id: Number(this.state.id),\n        points: Number(this.state.points)\n      }\n      const response = await fetch('/add', {\n        method: 'POST',\n        //headers: {\n        //  'Content-Type': 'application/json'\n        //},\n        body: JSON.stringify(newStudent)\n      });\n\n      if (response.ok) {\n        console.log('response work!!!!');\n      } else{\n        console.log(\"something didnt work\");\n      }\n      \n      this.setState({name: ''});\n      this.setState({id: ''});\n      this.setState({points: ''});\n    }\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name:\n          <input type=\"text\" value={this.state.name} onChange={this.handleName}/>\n        </label>\n        <label>\n          ID:\n          <input type=\"text\" value={this.state.id} onChange={this.handleID}/>\n        </label>\n        <label>\n          Points:\n          <input type=\"text\" value={this.state.points} onChange={this.handlePoints}/>\n        </label>\n        <input type=\"submit\" value=\"Add\" />\n      </form>\n    );\n  }\n}\n\nexport const Students = ({ students }) => {\n  return (\n    <List>\n      Name:\n      {students.map(student => {\n        return (\n          <List.Item key = {student.name}>\n            <Header>\n              {student.name}\n              {student.id}\n              {student.points}\n            </Header>\n          </List.Item>\n        \n        )\n      })}\n    </List>\n  );\n}\n\nfunction GetLines() {\n  const [students, setStudents] = useState([]);\n  useEffect(() => {\n    fetch(\"/data\").then(response =>\n      response.json().then(data => {\n        setStudents(data.rows);\n        \n      })\n    );\n  }, []); \n\n  console.log(students);\n\n  return (\n    <div className=\"GetLines\">  \n      <Students students={students} />\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div className='table'>\n      <CreateData />\n      <GetLines />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}