{"ast":null,"code":"var _jsxFileName = \"E:\\\\UMBC Stuff\\\\CMSC 447\\\\homework\\\\react-flask-app\\\\src\\\\components\\\\Students.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useTable, useRowSelect } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst IndeterminateCheckbox = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s((_ref, ref) => {\n  _s();\n\n  let {\n    indeterminate,\n    ...rest\n  } = _ref;\n  const defaultRef = React.useRef();\n  const resolvedRef = ref || defaultRef;\n  React.useEffect(() => {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      ref: resolvedRef,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}, \"ouw4KVvDKeit07oEcYWUcp3TdOA=\")), \"ouw4KVvDKeit07oEcYWUcp3TdOA=\");\n\n_c2 = IndeterminateCheckbox;\nexport const Students = _ref2 => {\n  _s2();\n\n  let {\n    students\n  } = _ref2;\n  const data = React.useMemo(() => students);\n  const columns = React.useMemo(() => [{\n    Header: 'Name',\n    accessor: 'name'\n  }, {\n    Header: 'ID',\n    accessor: 'id'\n  }, {\n    Header: 'Points',\n    accessor: 'points'\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    selectedFlatRows,\n    state: {\n      selectedRowIds\n    }\n  } = useTable({\n    columns,\n    data\n  }, useRowSelect, hooks => {\n    hooks.visibleColumns.push(columns => [{\n      id: 'selection',\n      Header: _ref3 => {\n        let {\n          getToggleAllRowsSelectedProps\n        } = _ref3;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, { ...getToggleAllRowsSelectedProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this);\n      },\n      Cell: _ref4 => {\n        let {\n          row\n        } = _ref4;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, { ...row.getToggleAllRowsSelectedProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this);\n      }\n    }, ...columns]);\n  }); // renders ui for table\n\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 10\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Students, \"QKCGYqoMyCbSvLfjq+kiZewNYj0=\", false, function () {\n  return [useTable];\n});\n\n_c3 = Students;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"IndeterminateCheckbox$React.forwardRef\");\n$RefreshReg$(_c2, \"IndeterminateCheckbox\");\n$RefreshReg$(_c3, \"Students\");","map":{"version":3,"sources":["E:/UMBC Stuff/CMSC 447/homework/react-flask-app/src/components/Students.js"],"names":["React","useState","useEffect","styled","useTable","useRowSelect","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","current","Students","students","data","useMemo","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","selectedFlatRows","state","selectedRowIds","hooks","visibleColumns","push","id","getToggleAllRowsSelectedProps","Cell","row","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","cell","getCellProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components'\r\nimport { useTable, useRowSelect } from 'react-table';\r\n\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n    ({ indeterminate, ...rest }, ref) => {\r\n        const defaultRef = React.useRef()\r\n        const resolvedRef = ref || defaultRef\r\n    \r\n        React.useEffect(() => {\r\n          resolvedRef.current.indeterminate = indeterminate\r\n        }, [resolvedRef, indeterminate])\r\n    \r\n        return (\r\n          <>\r\n            <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n          </>\r\n        )\r\n      }\r\n)\r\n\r\nexport const Students = ({ students }) => {\r\n  const data = React.useMemo(() => students);\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Name',\r\n        accessor: 'name',\r\n      }, {\r\n        Header: 'ID',\r\n        accessor: 'id',\r\n      }, {\r\n        Header: 'Points',\r\n        accessor: 'points',\r\n      },\r\n    ], []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    selectedFlatRows,\r\n    state: { selectedRowIds },\r\n  } = useTable({columns, data},\r\n    useRowSelect,\r\n    hooks => {\r\n        hooks.visibleColumns.push(columns => [{\r\n            id: 'selection',\r\n            Header: ({ getToggleAllRowsSelectedProps }) => (\r\n                <div>\r\n                    <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n                </div>\r\n            ),\r\n            Cell: ({ row }) => (\r\n                <div>\r\n                    <IndeterminateCheckbox {...row.getToggleAllRowsSelectedProps()} />\r\n                </div>\r\n            ),\r\n        },...columns,])\r\n    });\r\n\r\n  // renders ui for table\r\n  return (\r\n    <table {...getTableProps()}>\r\n     <thead> \r\n       {headerGroups.map(headerGroup => (\r\n         <tr {...headerGroup.getHeaderGroupProps()}>\r\n          {headerGroup.headers.map(column => (\r\n            <th {...column.getHeaderProps()}>\r\n              {column.render('Header')}\r\n            </th>\r\n          ))}\r\n         </tr>\r\n       ))}\r\n     </thead>\r\n     <tbody {...getTableBodyProps()}>\r\n       {rows.map(row => {\r\n         prepareRow(row)\r\n         return (\r\n          <tr {...row.getRowProps()}>\r\n            {row.cells.map(cell => {\r\n              return (\r\n                <td {...cell.getCellProps()}>\r\n                  {cell.render('Cell')}\r\n                </td>\r\n              )\r\n            })}\r\n          </tr>\r\n         )\r\n       })}\r\n     </tbody>\r\n   </table>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}