{"ast":null,"code":"var _jsxFileName = \"E:\\\\UMBC Stuff\\\\CMSC 447\\\\homework\\\\react-flask-app\\\\src\\\\components\\\\Students.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useTable, useRowSelect } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass DeleteStudent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    if (this.props.selected.length === 0) {\n      alert('Select rows to be deleted');\n    } else {\n      this.props.selected.forEach(row => {\n        var removeStudent = {\n          id: Number(row.id)\n        };\n        const response = fetch('/remove', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(removeStudent)\n        });\n      });\n    }\n\n    console.log(this.props.selected);\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Remove Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst IndeterminateCheckbox = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s((_ref, ref) => {\n  _s();\n\n  let {\n    indeterminate,\n    ...rest\n  } = _ref;\n  const defaultRef = React.useRef();\n  const resolvedRef = ref || defaultRef;\n  React.useEffect(() => {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      ref: resolvedRef,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}, \"ouw4KVvDKeit07oEcYWUcp3TdOA=\")), \"ouw4KVvDKeit07oEcYWUcp3TdOA=\");\n\n_c2 = IndeterminateCheckbox;\nexport const Students = _ref2 => {\n  _s2();\n\n  let {\n    students\n  } = _ref2;\n  const data = React.useMemo(() => students);\n  const columns = React.useMemo(() => [{\n    Header: 'Name',\n    accessor: 'name'\n  }, {\n    Header: 'ID',\n    accessor: 'id'\n  }, {\n    Header: 'Points',\n    accessor: 'points'\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    selectedFlatRows,\n    state: {\n      selectedRowIds\n    }\n  } = useTable({\n    columns,\n    data\n  }, useRowSelect, hooks => {\n    hooks.visibleColumns.push(columns => [{\n      id: 'selection',\n      Header: _ref3 => {\n        let {\n          getToggleAllRowsSelectedProps\n        } = _ref3;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, { ...getToggleAllRowsSelectedProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this);\n      },\n      Cell: _ref4 => {\n        let {\n          row\n        } = _ref4;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, { ...row.getToggleRowSelectedProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this);\n      }\n    }, ...columns]);\n  }); // renders ui for table\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 12\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteStudent, {\n      selected: selectedFlatRows.map(d => d.original)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Students, \"QKCGYqoMyCbSvLfjq+kiZewNYj0=\", false, function () {\n  return [useTable];\n});\n\n_c3 = Students;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"IndeterminateCheckbox$React.forwardRef\");\n$RefreshReg$(_c2, \"IndeterminateCheckbox\");\n$RefreshReg$(_c3, \"Students\");","map":{"version":3,"sources":["E:/UMBC Stuff/CMSC 447/homework/react-flask-app/src/components/Students.js"],"names":["React","useTable","useRowSelect","DeleteStudent","Component","constructor","props","handleSubmit","bind","event","selected","length","alert","forEach","row","removeStudent","id","Number","response","fetch","method","headers","body","JSON","stringify","console","log","preventDefault","render","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","Students","students","data","useMemo","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","selectedFlatRows","state","selectedRowIds","hooks","visibleColumns","push","getToggleAllRowsSelectedProps","Cell","getToggleRowSelectedProps","map","headerGroup","getHeaderGroupProps","column","getHeaderProps","getRowProps","cells","cell","getCellProps","d","original"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useTable, useRowSelect } from 'react-table';\r\n\r\n\r\nclass DeleteStudent extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    if(this.props.selected.length === 0) {\r\n        alert('Select rows to be deleted');\r\n    } else {\r\n        this.props.selected.forEach(row => {\r\n            var removeStudent = {\r\n                id: Number(row.id)\r\n            }\r\n            const response = fetch('/remove', {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(removeStudent)\r\n            });\r\n        });\r\n    }\r\n    console.log(this.props.selected);\r\n    event.preventDefault();\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input type=\"submit\" value=\"Remove Selected\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n    ({ indeterminate, ...rest }, ref) => {\r\n        const defaultRef = React.useRef()\r\n        const resolvedRef = ref || defaultRef\r\n    \r\n        React.useEffect(() => {\r\n          resolvedRef.current.indeterminate = indeterminate\r\n        }, [resolvedRef, indeterminate])\r\n    \r\n        return (\r\n          <>\r\n            <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n          </>\r\n        )\r\n      }\r\n)\r\n\r\nexport const Students = ({ students }) => {\r\n  const data = React.useMemo(() => students);\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Name',\r\n        accessor: 'name',\r\n      }, {\r\n        Header: 'ID',\r\n        accessor: 'id',\r\n      }, {\r\n        Header: 'Points',\r\n        accessor: 'points',\r\n      },\r\n    ], []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    selectedFlatRows,\r\n    state: { selectedRowIds },\r\n  } = useTable({columns, data},\r\n    useRowSelect,\r\n    hooks => {\r\n        hooks.visibleColumns.push(columns => [{\r\n            id: 'selection',\r\n            Header: ({ getToggleAllRowsSelectedProps }) => (\r\n                <div>\r\n                    <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n                </div>\r\n            ),\r\n            Cell: ({ row }) => (\r\n                <div>\r\n                    <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n                </div>\r\n            ),\r\n        },...columns,])\r\n    });\r\n\r\n  // renders ui for table\r\n  return (\r\n    <>\r\n      <table {...getTableProps()}>\r\n       <thead> \r\n         {headerGroups.map(headerGroup => (\r\n           <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps()}>\r\n                {column.render('Header')}\r\n              </th>\r\n            ))}\r\n           </tr>\r\n         ))}\r\n       </thead>\r\n       <tbody {...getTableBodyProps()}>\r\n         {rows.map(row => {\r\n           prepareRow(row)\r\n           return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map(cell => {\r\n                return (\r\n                  <td {...cell.getCellProps()}>\r\n                    {cell.render('Cell')}\r\n                  </td>\r\n                )\r\n              })}\r\n            </tr>\r\n           )\r\n         })}\r\n       </tbody>\r\n      </table>\r\n      <DeleteStudent selected = {selectedFlatRows.map(d => d.original)}/>\r\n    </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}